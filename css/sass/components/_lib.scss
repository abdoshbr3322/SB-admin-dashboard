@use "../helpers/globals" as *;
@use "../helpers/mixins" as *;
@use "../helpers/placeholders" as *;
// Bg colors
.bg-gradient-primary {
  background-color: rgb(78, 115, 223);
  background-image: linear-gradient(
    rgb(78, 115, 223) 10%,
    rgb(59, 101, 224) 100%
  );
}

// componenets
.circle {
  border-radius: 50%;
  --circle-dimension: 40px;
  width: var(--circle-dimension);
  height: var(--circle-dimension);
}
@for $i from 1 to 10 {
  $coordinate: $i * 10;
  .circle-#{$coordinate} {
    --circle-dimension: #{$coordinate}px;
  }
}

// colors:

  // make classes from defined variable colors
$colors: ('text-gray-50' ,'text-gray-30');
@each $color in $colors {
  .#{$color} {
    color: var(--#{$color});
  }
}

// font-size
$sizes: ('xsm': 11.2px, 'sm': 12.8px, 'md': 13.6px);
@each $class, $size in $sizes {
  .fs-#{$class} {
    font-size: $size;
  }
}

// customize bootstrap classes as sb

.bg-primary-sb,
.text-bg-primary-sb,
.btn-primary-sb {
  background-color: var(--sb-primary-color);
}
.text-bg-primary-sb {
  color: #fff;
}
.btn-primary-sb ,.border-primary-sb {
  border-color: var(--sb-primary-color) !important;
}
.text-primary-sb {
  color: var(--sb-primary-color);
}

// grow dropdowns
.dropdown.grow {
  .dropdown-menu.show {
    animation: grow .2s ease-in-out forwards;
  }
}

@keyframes grow {
  from {
    transform: scale(0);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

// create shadows

.shadow-sb {
  box-shadow: 0 0 23px 0 rgba(0 0 0 / 12%);
}

// Cards

.card-sb {
  &,
  .card-header {
    border-color: var(--sb-border-color) !important;
  }
  .card-header {
    background-color: #f8f9fc;
  }
  .info {
    color: #858796;
  }
}
